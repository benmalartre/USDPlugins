#usda 1.0
(
    "WARNING: THIS FILE IS GENERATED BY usdGenSchema.  DO NOT EDIT."
)

class PbdSolver "PbdSolver" (
    apiSchemas = ["CollectionAPI:colliders, CollectionAPI:bodies"]
    doc = "Defines position based dynamics solver."
)
{
    rel bodies (
        doc = "Simulate Body List"
    )
    rel colliders (
        doc = "Collider Object List"
    )
    vector3f gravity = (0, -9.8, 0) (
        displayName = "Gravity"
        doc = "Gravity vector in simulation solver space"
    )
    int iteration = 2 (
        doc = "Num constraint solve iteration per substep"
    )
    rel proxyPrim (
        doc = '''The proxyPrim relationship allows us to link a
        prim whose purpose is "render" to its (single target)
        purpose="proxy" prim.  This is entirely optional, but can be
        useful in several scenarios:
        
        - In a pipeline that does pruning (for complexity management)
        by deactivating prims composed from asset references, when we
        deactivate a purpose="render" prim, we will be able to discover
        and additionally deactivate its associated purpose="proxy" prim,
        so that preview renders reflect the pruning accurately.
        
        - DCC importers may be able to make more aggressive optimizations
        for interactive processing and display if they can discover the proxy
        for a given render prim.
        
        - With a little more work, a Hydra-based application will be able
        to map a picked proxy prim back to its render geometry for selection.

        \\note It is only valid to author the proxyPrim relationship on
        prims whose purpose is "render".'''
    )
    uniform token purpose = "default" (
        allowedTokens = ["default", "render", "proxy", "guide"]
        doc = """Purpose is a classification of geometry into categories that 
        can each be independently included or excluded from traversals of prims 
        on a stage, such as rendering or bounding-box computation traversals.

        See for more detail about how 
        purpose is computed and used."""
    )
    float sleepThreshold = 0.001 (
        doc = "Sleep threshold"
    )
    int startFrame = 1 (
        doc = "Simulation start frame"
    )
    int subSteps = 8 (
        doc = "Num substeps per frame"
    )
    token visibility = "inherited" (
        allowedTokens = ["inherited", "invisible"]
        doc = '''Visibility is meant to be the simplest form of "pruning" 
        visibility that is supported by most DCC apps.  Visibility is 
        animatable, allowing a sub-tree of geometry to be present for some 
        segment of a shot, and absent from others; unlike the action of 
        deactivating geometry prims, invisible geometry is still 
        available for inspection, for positioning, for defining volumes, etc.'''
    )
    uniform token[] xformOpOrder (
        doc = """Encodes the sequence of transformation operations in the
        order in which they should be pushed onto a transform stack while
        visiting a UsdStage's prims in a graph traversal that will effect
        the desired positioning for this prim and its descendant prims.
        
        You should rarely, if ever, need to manipulate this attribute directly.
        It is managed by the AddXformOp(), SetResetXformStack(), and
        SetXformOpOrder(), and consulted by GetOrderedXformOps() and
        GetLocalTransformation()."""
    )
}

class "PbdBodyAPI" (
    doc = "Applies soft body attributes to a deformable prim."
)
{
    float damp = 0.1 (
        displayName = "Damp"
        doc = "damp coefficient."
    )
    float mass = 1 (
        displayName = "mass"
        doc = "friction coefficient."
    )
    float radius = 0.1 (
        displayName = "radius"
        doc = "particle radius used by collision detection."
    )
    bool simulationEnabled = 1 (
        displayName = "Simulation Enabled"
        doc = "Determines if the PbdBodyAPI is enabled."
    )
    vector3f velocity = (0, 0, 0) (
        displayName = "Velocity"
        doc = "Velocity vector in simulation solver space"
    )
}

class "PbdCollisionAPI" (
    doc = "Applies position based dynamics collision attributes to a UsdGeomXformable prim."
)
{
    bool collisionEnabled = 1 (
        displayName = "Collision Enabled"
        doc = "Determines if the PbdCollisionAPI is enabled."
    )
    float friction = 0.2 (
        displayName = "Friction"
        doc = "friction coefficient."
    )
    float margin = 0.05 (
        displayName = "margin"
        doc = "extend search radius by margin for safer collision detection."
    )
    float maxSeparationVelocity = 25 (
        displayName = "Maximum Separation Velocity"
        doc = "Maximum separation velocity."
    )
    float restitution = 0 (
        displayName = "Restitution"
        doc = "Restitution coefficient."
    )
}

class "PbdConstraintAPI" (
    doc = "Applies position based dynamics constraint attributes to a deformable prim(s)."
)
{
    bool pbd:__INSTANCE_NAME__:constraintEnabled = 1 (
        displayName = "Constraint Enabled"
        doc = "Determines if the PbdConstraintAPI is enabled."
    )
    float pbd:__INSTANCE_NAME__:damp = 0.2 (
        displayName = "Damp"
        doc = "Damp coefficient. Unitless."
    )
    float pbd:__INSTANCE_NAME__:stiffness = 10000 (
        displayName = "Stiffness"
        doc = "stiffness coefficient. Unitless."
    )
}

